name: Continuous Integration with Github Actions

on:
  push:
    branches:
      - main

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Docker Hub Login
      uses: docker/login-action@v2.1.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      
    - name: Login to Amazon ECR Private
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
        cache: maven
        
    - name: Build Application JAR
      run: mvn clean install

    - name: Build Docker Compose
      run: docker-compose build

    - name: Tag, and push docker image to Amazon ECR
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:latest ${{ secrets.AWS_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker tag ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:latest ${{ secrets.AWS_IMAGE_REPO_URL }}:latest
        docker push ${{ secrets.AWS_IMAGE_REPO_URL }}:${{ github.run_id }}
        docker push ${{ secrets.AWS_IMAGE_REPO_URL }}:latest
      
    - name: Push to Docker Hub
      run: |
        docker tag ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:latest ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:${{ github.run_id }}
        
        docker push ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:${{ github.run_id }}
        docker push ${{ secrets.DOCKER_USERNAME }}/curso-udemy-spring-boot-aws:latest
